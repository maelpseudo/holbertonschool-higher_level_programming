>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("python")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 15, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: name must be greater than 0
>>> bg.integer_validator("name", "younes")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 13, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: name must be an integer
>>> bg.integer_validator("name", None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 13, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: name must be an integer
>>> bg.area()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 9, in area
    raise Exception('area() is not implemented')
Exception: area() is not implemented
>>> bg.integer_validator("name", 2)
>>> bg.integer_validator("name", 1)
>>> bg.integer_validator("age", (8,))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 13, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: age must be an integer
>>> bg.integer_validator("age", True)
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 13, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: age must be an integer
>>> bg.integer_validator("age", (3, 4))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 13, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: age must be an integer
>>>